{"version":3,"sources":["serviceWorker.js","contexts/CartReducer.js","contexts/CartContext.js","helpers/utils.js","pages/store/ProductItem.js","pages/store/ProductsGrid.js","pages/cart/CartItem.js","pages/cart/CartProducts.js","pages/cart/index.js","pages/store/index.js","index.js","pages/store/ProductsGrid.module.scss"],"names":["Boolean","window","location","hostname","match","sumItems","cartItems","itemCount","reduce","total","product","quantity","price","toFixed","CartReducer","state","action","type","find","item","id","payload","push","filter","findIndex","products","CartContext","createContext","initialState","checkout","CartContextProvider","children","useReducer","dispatch","useEffect","getAllProducts","axios","get","then","res","data","forEach","e","orderID","addItemsToCart","count","orderQuantity","increaseItemInCart","catch","error","console","log","addProductData","contextValues","removeProduct","url","addProduct","post","increase","decrease","clearCart","delete","Provider","value","formatNumber","number","Intl","NumberFormat","style","currency","format","ProductItem","useContext","isInCart","className","name","onClick","existingCartItem","ProductsGrid","styles","p__container","length","p__grid","map","key","CartItem","CartProducts","Cart","Store","method","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.0cecde68.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\n\r\nexport const sumItems = cartItems => {\r\n    let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\r\n    let total = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n    return { itemCount, total }\r\n}\r\n\r\nexport const CartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n            if (!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            } \r\n\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"REMOVE_ITEM\":\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems.filter(item => item.id !== action.payload.id)),\r\n                cartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\r\n            }\r\n        case \"INCREASE\":\r\n            state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity++\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"DECREASE\":\r\n            state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity--\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"CLEAR\":\r\n                return {\r\n                    ...state,\r\n                    cartItems: [],\r\n                    ...sumItems([]),\r\n                }\r\n\r\n        case \"ADD_PRODUCT\":\r\n            if (!state.products.find(item => item.id === action.payload.id)) {\r\n                state.products.push({\r\n                    ...action.payload\r\n                })\r\n            }else{\r\n             var id = state.products.findIndex(item => item.id === action.payload.id)\r\n                   state.products[id] = action.payload;            \r\n            }\r\n            return {\r\n                ...state,\r\n                products: [...state.products]\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import React, { createContext, useReducer,  useEffect } from \"react\";\r\nimport { CartReducer, sumItems } from \"./CartReducer\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  ...sumItems([]),\r\n  products: [],\r\n  checkout: false,\r\n};\r\n\r\n\r\n\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(CartReducer, initialState);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getAllProducts();\r\n    axios\r\n      .get(\"/orders\")\r\n      .then((res) => {\r\n        res.data.forEach((e) => {\r\n          e.product.orderID = e.id;\r\n          addItemsToCart(e.product);\r\n          for (let count = 1; count < e.orderQuantity; count++) {\r\n            increaseItemInCart(e.product);\r\n          }\r\n        });\r\n      }, [])\r\n      .catch((error) => console.log(error));\r\n\r\n    },[]);\r\n\r\n  \r\n  const addProductData = (payload) => {\r\n    dispatch({ type: \"ADD_PRODUCT\", payload });\r\n  };\r\n\r\n  const addItemsToCart = (payload) => {\r\n    dispatch({ type: \"ADD_ITEM\", payload });\r\n  };\r\n\r\n  const increaseItemInCart = (payload) => {\r\n    dispatch({ type: \"INCREASE\", payload });\r\n  };\r\n  const increase = (payload) => {\r\n    let url= \"/updateorder/\"+payload.orderID\r\n    axios\r\n    .get(url)\r\n    .then((res) => {\r\n      res.data.forEach((e) => {\r\n        addProductData(e);       \r\n      });\r\n      increaseItemInCart(payload );\r\n    }, [])\r\n    .catch((error) => console.log(error));\r\n  };\r\n\r\n  const decrease = (payload) => {\r\n\r\n    let url= \"/removeorder/\"+payload.orderID\r\n    axios\r\n    .get(url)\r\n    .then((res) => {\r\n      res.data.forEach((e) => {\r\n        addProductData(e);    \r\n      });\r\n      dispatch({ type: \"DECREASE\", payload });\r\n    }, [])\r\n    .catch((error) => console.log(error));\r\n    \r\n  };\r\n\r\n  const addProduct = (payload) => {\r\n    axios\r\n      .post(\"/order\", payload)\r\n      .then((res) => {\r\n        payload.orderID = res.data.id;\r\n        addItemsToCart(payload);\r\n      }, [])\r\n      .catch((error) => console.log(error));\r\n      getAllProducts();\r\n  };\r\n\r\n  const removeProduct = (payload) => {\r\n\r\n    let url= \"/removeorder/\"+payload.orderID\r\n    axios\r\n    .get(url)\r\n    .then((res) => {\r\n      dispatch({ type: \"REMOVE_ITEM\", payload });\r\n      res.data.forEach((e) => {\r\n        addProductData(e);\r\n      });\r\n    }, [])\r\n    .catch((error) => console.log(error));\r\n  };\r\n\r\n  const clearCart = (payload) => {\r\n    console.log(payload);\r\n    payload.forEach((item) => {\r\n      axios\r\n      .delete(\"/order/\"+item.orderID)\r\n      .then((res) => {\r\n        getAllProducts();\r\n        dispatch({ type: \"CLEAR\" });\r\n      }, [])\r\n      .catch((error) => console.log(error));\r\n    });\r\n     // \r\n  };\r\n\r\n  const getAllProducts = () => {\r\n    axios\r\n    .get(\"/products\")\r\n    .then((res) => {\r\n      res.data.forEach((e) => {\r\n        addProductData(e);\r\n      });\r\n    }, [])\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  const contextValues = {\r\n    removeProduct,\r\n    addProduct,\r\n    increase,\r\n    decrease,\r\n    clearCart,\r\n    addProductData,\r\n    ...state,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={contextValues}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContextProvider;\r\n","export const formatNumber = number => {\r\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'INR' }).format(number);\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { formatNumber } from '../../helpers/utils';\r\n\r\nconst ProductItem = ({product}) => {\r\n\r\n    const { addProduct, cartItems, increase } = useContext(CartContext);\r\n\r\n    const isInCart = product => {\r\n        return !!cartItems.find(item => item.id === product.id);\r\n    }\r\n\r\n    const existingCartItem = product => {\r\n        increase(cartItems.find(item => item.id === product.id));\r\n    }\r\n\r\n    return ( \r\n        <div className=\"card card-body\">\r\n            <p>{product.name}</p>\r\n            <h3 className=\"text-left\">{formatNumber(product.price)}</h3>\r\n            <p> Available Stock: {product.quantity}</p>\r\n            { product.quantity != 0 &&\r\n            <div className=\"text-right\">\r\n                {\r\n                    isInCart(product) && \r\n                    <button \r\n                    onClick={() => existingCartItem(product)}\r\n                    className=\"btn btn-outline-primary btn-sm\">Add more</button>\r\n                }\r\n\r\n                {\r\n                    !isInCart(product) && \r\n                    <button \r\n                    onClick={() => addProduct(product)}\r\n                    className=\"btn btn-primary btn-sm\">Add to cart</button>\r\n                }\r\n               \r\n            </div>\r\n            } \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ProductItem;","import React, { useContext } from 'react';\r\nimport ProductItem from './ProductItem';\r\nimport styles from './ProductsGrid.module.scss';\r\nimport { CartContext } from '../../contexts/CartContext';\r\n\r\nconst ProductsGrid = () => {\r\n\r\n    const { products} = useContext(CartContext)\r\n\r\n    return ( \r\n        <div className={styles.p__container}>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"py-2\">\r\n                        {products.length} Products\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.p__grid}>\r\n\r\n                {\r\n                    products.map(product => (\r\n                        <ProductItem key={product.id} product={product}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ProductsGrid;","import React, { useContext } from 'react';\r\nimport { CartContext } from '../../contexts/CartContext';\r\n\r\nimport { formatNumber } from '../../helpers/utils';\r\n\r\nconst CartItem = ({product}) => {\r\n\r\n    const { increase, decrease, removeProduct } = useContext(CartContext);\r\n\r\n    return ( \r\n        <div className=\"row no-gutters py-2\">\r\n     \r\n            <div className=\"col-sm-4 p-2\">\r\n                <h5 className=\"mb-1\">{product.name}</h5>\r\n                <p className=\"mb-1\">Price: {formatNumber(product.price)} </p> \r\n            </div>\r\n\r\n            <div className=\"col-sm-2 p-2 text-center \">\r\n                 <p className=\"mb-0\">Qty: {product.quantity}</p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 p-2 text-right\">\r\n                 <button onClick={() => increase(product)}>\r\n                     Add\r\n                 </button>\r\n\r\n                 {\r\n                     product.quantity > 1 &&\r\n                     <button onClick={() => decrease(product)}>\r\n                        Remove\r\n                    </button>\r\n                 }\r\n\r\n                {\r\n                     product.quantity === 1 &&\r\n                     <button onClick={() => removeProduct(product)}>\r\n                        Delete\r\n                    </button>\r\n                 }\r\n                 \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CartItem;","import React, { useContext } from 'react';\r\nimport { CartContext } from '../../contexts/CartContext';\r\n\r\nimport CartItem from './CartItem';\r\n\r\nconst CartProducts = () => {\r\n\r\n    const { cartItems } = useContext(CartContext);\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"card card-body border-0\">\r\n                {\r\n                    cartItems.map(product =>  <CartItem key={product.id} product={product}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CartProducts;","import React, { useContext } from 'react';\r\n\r\nimport CartProducts from './CartProducts';\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { formatNumber } from '../../helpers/utils';\r\n\r\nconst Cart = () => {\r\n\r\n    const { total, cartItems, itemCount, clearCart } = useContext(CartContext);\r\n    \r\n    return ( \r\n                <div >\r\n                <div className=\"text-center mt-5\">\r\n                    <h1>Cart</h1>\r\n                </div>\r\n\r\n                <div className=\"row no-gutters justify-content-center\">\r\n                    <div className=\"col-sm-9 p-3\">\r\n                        {\r\n                            cartItems.length > 0 ?\r\n                            <CartProducts/> :\r\n                            <div className=\"p-3 text-center text-muted\">\r\n                                Your cart is empty\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                    {\r\n                        cartItems.length > 0 && \r\n                        <div className=\"col-sm-3 p-3\">\r\n                            <div className=\"card card-body\">\r\n                                <p className=\"mb-1\">Total Items</p>\r\n                                <h4 className=\" mb-3 txt-right\">{itemCount}</h4>\r\n                                <p className=\"mb-1\">Total Payment</p>\r\n                                <h3 className=\"m-0 txt-right\">{formatNumber(total)}</h3>\r\n                                <hr className=\"my-4\"/>\r\n                                <div className=\"text-center\">\r\n                                   <button type=\"button\" className=\"btn btn-outlineprimary btn-sm\" onClick={() => clearCart(cartItems)}>CLEAR</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Cart;","import React from 'react';\r\n\r\nimport ProductsGrid from './ProductsGrid';\r\nimport Cart from '../cart';\r\nimport 'bootswatch/dist/lux/bootstrap.css'\r\n\r\nconst Store = () => {\r\n    \r\n    return ( \r\n        <div className=\"row\" >\r\n             <div className=\"col-sm-12\">\r\n             <div className=\"row\" >\r\n             <div className=\"col-sm-10\">\r\n                <div className=\"text-center mt-5\">\r\n                    <h1>Bazinga Shopings</h1>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                <form action=\"/logout\" method=\"post\">\r\n                        <input type=\"submit\" value=\"Logout\" />\r\n                </form>\r\n                </div >\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"text-center mt-5\">\r\n                    <h1>Store</h1>\r\n                </div>\r\n                <ProductsGrid/>\r\n            </div>\r\n            \r\n            <div className=\"col-sm-6\">\r\n                <div className=\"text-center mt-5\">\r\n                    <h1>Order Details</h1>\r\n                </div>\r\n                <Cart/>\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport CartContextProvider from './contexts/CartContext';\r\nimport Store from './pages/store';\r\n\r\nReactDOM.render(\r\n         <CartContextProvider>\r\n          <Store/>\r\n        </CartContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p__grid\":\"ProductsGrid_p__grid__2aU3B\"};"],"sourceRoot":""}